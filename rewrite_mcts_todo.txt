mcts:

- mcts node based on game hash instead of the whole game
    - each node needs
        - game hash
        - last move (leads to parent) ???
        - link to parent node
        - possible moves (leads to childs)
            - is fully expanded ???
        - link to child nodes
        - visit_count
        - value_sum

memory:
- add storage limit
- improve memory storage (file) (decrease size per node) (current 2000 nodes for 1.0 MB)

tree pruning:
- cut out nodes with low value_sum and visit_count
- RAVE? = set different nodes as equal (game state and last move are identical)

node statistics:
    - how deep is the tree (longest path)
    - leaf node path length
    - q-value for root node (value_sum/visit_count)
    

game:
    - play function should return the new game instead of the winner (we dont use the winner return values)

M2 Homework:
- Set up new memory file for updated value policy
